@model Portal
@inject PortalsDbContext _context;
@{
    ViewBag.Title = "Portalo kūrimas";
    Layout = "_Layout";
    List<Portal> freePortals = _context.Portals.Where(p => p.PortalJunction == null).ToList();
}

<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center p-2">
    <span class="title">
        <h1>@ViewBag.Title</h1>
    </span>
    <span class="actions">
        <a href="@Url.Action("ShowPortals")" class="btn btn-secondary"><i class="fa-solid fa-angles-left"></i> Atgal į sarašą</a>
    </span>
</div>

<div class="container-fluid d-flex justify-content-center">
    @using (Html.BeginForm("PostCreate", "Place", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <fieldset class="border rounded shadow p-2">
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Longitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Latitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LiquidCapacity, new { @class = "control-label" })
                @Html.EditorFor(m => m.LiquidCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.LiquidCapacity, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CurrentLiquidLevel, new { @class = "control-label" })
                @Html.EditorFor(m => m.CurrentLiquidLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.CurrentLiquidLevel, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.TeleportPrice, new { @class = "control-label" })
                @Html.EditorFor(m => m.TeleportPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.TeleportPrice, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.TeleportPrice, new { @class = "control-label" })
                @Html.EditorFor(m => m.TeleportPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.TeleportPrice, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Status, new { @class = "control-label" })
                @Html.EditorFor(m => m.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.LabelFor(m => m.JunctionPortalId, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.JunctionPortalId, new SelectList(freePortals, "Id", "Id"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.JunctionPortalId, "", new { @class = "text-danger" })
            </div>


        </fieldset>

        <div class="container-fluid d-flex d-row justify-content-end">
            <button formnovalidate="formnovalidate" name="save" value="1" class="btn btn-success"><i class="fa-solid fa-floppy-disk"></i>Išsaugoti</button>
        </div>
    }
</div>
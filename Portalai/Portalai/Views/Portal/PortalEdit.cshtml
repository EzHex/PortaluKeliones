@model Portal

@{
    ViewBag.Title = "Portalo informacijos redagavimas";
    Layout = "Navbar";
}

<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center p-2">
    <span class="title">
        <h1>@ViewBag.Title</h1>
    </span>
    <span class="actions">
        <a href="@Url.Action("ShowPortals")" class="btn btn-secondary"><i class="fa-solid fa-angles-left"></i> Atgal į sąrašą</a>
    </span>
</div>

<div class="container-fluid d-flex justify-content-center">
    @using (Html.BeginForm("PostEdit", "Portal", FormMethod.Post,new { style = "width:50%" }))
    {
        @Html.AntiForgeryToken()
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.HiddenFor(m => m.Id)

        <fieldset class="border rounded shadow p-2" style="word-wrap: break-word;">
            <legend class="text-center">Portalo informacija</legend>
            <div class="form-group">
                @Html.LabelFor(m => m.Latitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.Longitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.LiquidCapacity, new { @class = "control-label" })
                @Html.EditorFor(m => m.LiquidCapacity, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(m => m.LiquidCapacity, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.CurrentLiquidLevel, new { @class = "control-label" })
                @Html.EditorFor(m => m.CurrentLiquidLevel, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(m => m.CurrentLiquidLevel, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.TeleportCount, new { @class = "control-label" })
                @Html.EditorFor(m => m.TeleportCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.TeleportCount, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.TeleportPrice, new { @class = "control-label" })
                @Html.EditorFor(m => m.TeleportPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.TeleportPrice, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.Status, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.Status, new SelectList(Enum.GetValues(typeof(PortalStatus)), Model.Status), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
            </div>
            
            
        </fieldset>
        <br/>
        <fieldset class="border rounded shadow p-2" style="word-wrap: break-word;">
            <legend class="text-center">Jungties informacija</legend>
                    <div class="form-group">
                            @Html.LabelFor(m => m.JunctionPortalId, new { @class = "control-label" })
                             @if (Model.JunctionPortalId != 0)
                             {
                                 @Html.DropDownListFor(m => m.JunctionPortalId, new SelectList(Model.PortalsList, "Id", "Id", Model.JunctionPortalId.ToString()),  new { @class = "form-control" })
                                 <div style="margin-top:10px;"><a href="@Url.Action("ShowDeleteConfirmForm", new { id = Model.PortalJunction.Id })" class="btn btn-danger">Šalinti</a></div>
                             }
                             else
                             {
                                 <p>Cia turi buti dropdown</p>
                             }
                    </div>
        </fieldset>
        
        <div style="margin-top: 10px" class="container-fluid d-flex d-row justify-content-end">
            <button name="save" value="1" class="btn btn-success"><i style="padding-right: 5px" class="fa-solid fa-check"></i> Pateikti</button>
        </div>
    }
</div>
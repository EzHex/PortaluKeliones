@model Portalai.ViewModel.PortalEditVM

@{
    ViewBag.Title = "Portalo informacijos redagavimas";
    Layout = "_Layout";
}

<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center p-2">
    <span class="title">
        <h1>@ViewBag.Title</h1>
    </span>
    <span class="actions">
        <a href="@Url.Action("ShowPortals")" class="btn btn-secondary"><i class="fa-solid fa-angles-left"></i> Atgal į sąrašą</a>
    </span>
</div>

<div class="container-fluid d-flex justify-content-center">
    @using (Html.BeginForm("PostEdit", "Portal", FormMethod.Post, new { style = "width:50%" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.Portal.Id)

        <fieldset class="border rounded shadow p-2" style="word-wrap: break-word;">
            <legend class="text-center">Portalo informacija</legend>
            <div class="form-group">
                @Html.LabelFor(m => m.Portal.Latitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.Latitude, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.Longitude, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.Longitude, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.LiquidCapacity, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.LiquidCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.LiquidCapacity, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.CurrentLiquidLevel, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.CurrentLiquidLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.CurrentLiquidLevel, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.TeleportCount, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.TeleportCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.TeleportCount, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.TeleportPrice, new { @class = "control-label" })
                @Html.EditorFor(m => m.Portal.TeleportPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Portal.TeleportPrice, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Portal.Status, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.Portal.Status, new SelectList(Enum.GetValues(typeof(PortalStatus)), Model.Portal.Status), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Portal.Status, "", new { @class = "text-danger" })
            </div>


        </fieldset>
        <br/>
        <fieldset class="border rounded shadow p-2" style="word-wrap: break-word;">
            <div class="container-fluid d-flex d-row justify-content-between align-items-center" style="margin-bottom: 10px;">
                <span></span>
                <legend style="width: unset; margin-bottom: 0;">Jungties informacija</legend>
                <button
                    name="add"
                    value="1"
                    formnovalidate @*ASP.NET Core magic attribute to prevent client side validation when submit button is clicked*@
                    formaction="@Url.Action()#listEnd"
                    class="btn btn-info"
                    style="white-space: nowrap;">
                    <i class="fa-solid fa-plus"></i> Pridėti
                </button>
            </div>
        </fieldset>

        <div style="margin-top: 10px" class="container-fluid d-flex d-row justify-content-end">
            <button name="save" value="1" class="btn btn-success"><i style="padding-right: 5px" class="fa-solid fa-check"></i> Pateikti</button>
        </div>
    }
</div>
@model Trip

@{
    ViewBag.Title = "Maršruto kūrimas";
    Layout = "_Layout";
}


<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center p-2">
    <span class="title">
        <h1>@ViewBag.Title</h1>
    </span>
    <span class="actions">
        <a href="@Url.Action("ShowTrips")" class="btn btn-secondary"><i class="fa-solid fa-angles-left"></i> Atgal į sarašą</a>
    </span>
</div>

<div class="container-fluid d-flex justify-content-center">
    @using (Html.BeginForm("Edit", "Trip", FormMethod.Post, new { @class = "col-md-6" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <fieldset class="border rounded shadow p-2">
            <div class="form-group">
                @Html.LabelFor(m => m.DepartureTime, new { @class = "control-label" })
                @Html.EditorFor(m => m.DepartureTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DepartureTime, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.ArrivalTime)

                @for (int i = 0; i < Model.Voyages.Count; i++)
                {
                    @Html.HiddenFor(m => Model.Voyages[i].Id)
                    @Html.HiddenFor(m => Model.Voyages[i].DepartureTime)
                    @Html.HiddenFor(m => Model.Voyages[i].ArrivalTime)
                    @Html.HiddenFor(m => Model.Voyages[i].Price)
                }

            </div>
        </fieldset>


        <div class="container-fluid d-flex d-row justify-content-end">
            <button formnovalidate name="save" value="1" class="btn btn-success"><i class="fa-solid fa-floppy-disk"></i> Išsaugoti</button>
        </div>
    }
</div>